---
title: "Digital self efficacy scale validation analysis: ICILS & PISA"
subtitle: "Advances"
author: "Tomás Urzúa"
date: today
lang: en
fontsize: 14pt
format:
  html:
    code-fold: true
    toc: true
    toc-location: left
    toc-depth: 2
    toc-expand: 1
    toc-title: Contenidos
    number-sections: true
    number-depth: 3
    theme:
      - united
    code-link: true
    title-block-banner: true
editor_options: 
  chunk_output_type: console
---

```{r}
#| label: libraries
#| echo: false 

pacman::p_load(
  dplyr, haven, sjlabelled,  psych,  purrr,  tidyr,  sjPlot,  ggplot2, 
  parameters,  table1,  car,  beeswarm,  lme4, scales, ggrepel, corrplot,
  ggtext, patchwork, lavaan, semTools)

options(scipen = 999)
rm(list = ls())
```

```{r}
#| include: false

library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)

table_format <- if(is_html_output()) {
  "html"
} else if(is_latex_output()) {
  "latex"
}
table_format2 <- if(is_html_output()) {
  T
} else if(is_latex_output()) {
  F
}

options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
```

```{r}
#| label: data
#| echo: false

icils <- readRDS("~/GitHub/ILSAs_batteries_measurement/data/proc_data/icils23_proc.rds")
pisa <- readRDS("~/GitHub/ILSAs_batteries_measurement/data/proc_data/pisa22_proc.rds")
```

# ICILS

## Descriptives

```{r}
#| label: fig-descr-icils
#| echo: true
#| fig-cap: Digital self-efficacy ICILS
#| fig-cap-location: bottom

a <- icils %>% 
  select(IS3G24A, IS3G24B, IS3G24C, IS3G24E, IS3G24F,
         IS3G24G, IS3G24H, IS3G24I, IS3G24J, IS3G24M) %>% 
  sjPlot::plot_likert(geom.colors = "Reds",
                      title = c("General (n = 135.615)"),
                      sort.frq = "pos.desc",
                      geom.size = 0.8,
                      axis.labels = c("edit_photos", "edit_text", "search_info", 
                                      "change_settings", "create_pres", "upload_media", "insert_image", "install_app", "eval_info", "find_source"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
  ) +
  ggplot2::theme(legend.position = "none")

b <- icils %>% 
  select(IS3G24D, IS3G24K, IS3G24L) %>% 
  sjPlot::plot_likert(geom.colors = "Reds",
                      title = c("Specialized"),
                      sort.frq = "pos.desc",
                      geom.size = 0.8,
                      axis.labels = c("build_page", "write_code", "devel_program"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
  ) +
  ggplot2::theme(legend.position = "bottom")

liker_icils <- a/b

liker_icils 
```

## Bivariates

```{r}
#| label: fig-corr-icils
#| echo: true
#| fig-cap: ICILS correlations
#| fig-cap-location: bottom

M <- psych::polychoric(icils[c(3:15)])

P <- cor(icils[c(3:15)], method = "pearson")

diag(M$rho) <- NA

diag(P) <- NA

rownames(M$rho) <- c("edit_photos (A)",
                     "edit_text (B)",
                     "search_info (C)",
                     "build_page (D)",
                     "change_settings (E)",
                     "create_pres (F)",
                     "upload_media (G)",
                     "insert_image (H)",
                     "install_app (I)",
                     "eval_info (J)",
                     "write_code (K)",
                     "devel_program (L)",
                     "find_source (M)")

#set Column names of the matrix
colnames(M$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                    "(H)","(I)", "(J)", "(K)", "(L)", "(M)")

rownames(P) <- c("edit_photos (A)",
                 "edit_text (B)",
                 "search_info (C)",
                 "build_page (D)",
                 "change_settings (E)",
                 "create_pres (F)",
                 "upload_media (G)",
                 "insert_image (H)",
                 "install_app (I)",
                 "eval_info (J)",
                 "write_code (K)",
                 "devel_program (L)",
                 "find_source (M)")

#set Column names of the matrix
colnames(P) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                "(H)","(I)", "(J)", "(K)", "(L)", "(M)")

testp <- cor.mtest(M$rho, conf.level = 0.95)

#Plot the matrix using corrplot
corrplot::corrplot(M$rho,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#B42012", "white", "#E16462"))(12),
                   bg = "white",
                   na.label = "-")
```

## Confirmatory factorial analysis

# PISA

## Descriptives

```{r}
#| label: select variables
#| include: false

pisa <- pisa %>%
  select(search_info, asses_info, share_info, pair_collab, how_to_share, 
         edit_text, collect_data, create_pres, page_web, change_settings, 
         select_app, create_program, identify_error, logical_solution)
```

```{r}
#| label: fig-descr-pisa
#| echo: true
#| fig-cap: Digital self-efficacy PISA
#| fig-cap-location: bottom

c <- pisa %>% 
  select(search_info, asses_info, share_info, pair_collab, how_to_share, 
         edit_text, collect_data, create_pres, page_web, change_settings, 
         select_app, create_program, identify_error, logical_solution) %>% 
  sjPlot::plot_likert(geom.colors = "Reds",
                      title = c("Digital self-efficacy (n = 393.607)"),
                      sort.frq = "pos.desc",
                      geom.size = 0.8,
                      axis.labels = c("search_info", "asses_info", "share_info",
                                      "pair_collab", "how_to_share",                                                       "edit_text", "collect_data", "create_pres",
                                      "page_web", "change_settings", "select_app",
                                      "create_program", "identify_error",
                                      "logical_solution"),
                      catcount = 4,
                      values  =  "sum.outside",
                      reverse.colors = F,
                      reverse.scale = T,
                      show.n = FALSE,
                      show.prc.sign = T
  ) +
  ggplot2::theme(legend.position = "bottom")

c
```

## Bivariates

```{r}
#| label: fig-corr-pisa
#| echo: true
#| fig-cap: PISA correlations
#| fig-cap-location: bottom


Mp <- psych::polychoric(pisa[c(1:14)])

Pp <- cor(pisa[c(1:14)], method = "pearson")

diag(Mp$rho) <- NA

diag(Pp) <- NA

rownames(Mp$rho) <- c("search_info (A)",
                      "asses_info (B)",
                      "share_info (C)",
                      "pair_collab (D)",
                      "explain_howtoshare (E)",
                      "edit_text (F)",
                      "collect_data (G)",
                      "create_pres (H)",
                      "page_web (I)", 
                      "change_settings (J)",
                      "select_app (K)",
                      "create_program (L)", 
                      "identify_error (M)",
                      "logical_solution (N)")

#set Column names of the matrix
colnames(Mp$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                    "(H)","(I)", "(J)", "(K)", "(L)", "(M)", "(N)")

rownames(Pp) <- c("search_info (A)",
                  "asses_info (B)",
                  "share_info (C)",
                  "pair_collab (D)",
                  "explain_howtoshare (E)",
                  "edit_text (F)",
                  "collect_data (G)",
                  "create_pres (H)",
                  "page_web (I)", 
                  "change_settings (J)",
                  "select_app (K)",
                  "create_program (L)", 
                  "identify_error (M)",
                  "logical_solution (N)")

#set Column names of the matrix
colnames(Pp) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
                "(H)","(I)", "(J)", "(K)", "(L)", "(M)", "(N)")

testpp <- cor.mtest(Mp$rho, conf.level = 0.95)

#Plot the matrix using corrplot
corrplot::corrplot(Mp$rho,
                   method = "color",
                   addCoef.col = "black",
                   type = "upper",
                   tl.col = "black",
                   col = colorRampPalette(c("#B42012", "white", "#E16462"))(12),
                   bg = "white",
                   number.digits = 2,
                   na.label = "-")
```

## Exploratory factor model (3 factors)

```{r}
#| include: false 

pisa_efa <- pisa %>% 
  select(search_info, asses_info, share_info, pair_collab, how_to_share, 
         edit_text, collect_data, create_pres, page_web, change_settings, 
         select_app, create_program, identify_error, logical_solution)
corMat <- round(cor(pisa_efa), 2)
KMO(corMat) 
cortest.bartlett(corMat, n = 393607)
```

```{r}
fac_pa <- fa(r = pisa_efa, nfactors = 3, fm= "pa")
fac_pa
```


## Confirmatory factor analysis

```{r}
#| label: Measurement model

model_cfa <- '
  gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share + 
         edit_text + collect_data + create_pres + change_settings + select_app
  spec_dse = ~ page_web + create_program + identify_error + logical_solution
  '

m_cfa <- cfa(model = model_cfa, 
              data = pisa, 
              estimator = "DWLS",
              ordered = T,
              std.lv = F)
```

```{r}
#| label: tbl-factor-loadings
#| tbl-cap: PISA Factor loadings 
#| tbl-cap-location: bottom
#| echo: true 

standardizedsolution(m_cfa) %>% 
  filter(op == "=~") %>% 
  select(Factor = lhs, Indicator = rhs, `Loading (DWLS)` = est.std) %>% 
  kable(format = "markdown", digits = 2)
```

En @tbl-factor-loadings las cargas factoriales se encuentran estandarizadas. Resulta llamativo que todos los loadings son bastante altos, lo cual podría sugerir que los factores están sobre explicando a los indicadores

```{r}
summary(m_cfa)
```

```{r}
#| label: tbl-fit-pisa
#| tbl-cap: PISA Fit measures
#| tbl-cap-location: bottom
#| echo: true

fit_pisa <- fitMeasures(m_cfa,
                         c("chisq", "df", "pvalue", "cfi", "tli", "rmsea", "srmr"))

knitr::kable(fit_pisa, digits = 3)
```

$\chi^2$ es un número extremadamente alto y significativo, lo cual no es buen indicio, pero esto puede deberse al gran tamaño de la muestra (N > 200 tienden a dar $\chi^2$ significativo).

El *CFI* y el *TLI* poseen valores que sugieren un buen ajuste del modelo (*CFI* & *TLI* > 0.95), aunque el *RMSEA* contradice los indices de ajuste anteriores (*RMSEA* < 0.05), lo cual evidencia una incongruencia en el modelo. 

## SEM Multigrupo con PISA

```{r}
#| label: Multigroup

multigroup_cfa <- '
    gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share + 
         edit_text + collect_data + create_pres + change_settings + select_app
    spec_dse = ~ page_web + create_program + identify_error + logical_solution
  '
```


```{r}
#| label: modelo confirmatorio multigrupo

fitgroup <- sem(model = multigroup_cfa, data = pisa, group = "CNT")
```


### Summary del modelo 

```{r}
# El output arroja los modelos para todos los paises

summary(fitgroup, fit.measures = TRUE, standardized = TRUE)
```


```{r}
summary(fit, fit.measures = TRUE, standardized = TRUE)
```

```{r}
modin <- modificationIndices(fit)

modin %>% 
  filter(mi > 3.84)
```

# SEM Multinivel con PISA


```{r}


multimodel_cfa <- '
    level: 1
    gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share + 
         edit_text + collect_data + create_pres + change_settings + select_app
    spec_dse = ~ create_program + identify_error + logical_solution
    level: 2
    gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share + 
         edit_text + collect_data + create_pres + change_settings + select_app
    spec_dse = ~ create_program + identify_error + logical_solution
  '
```


```{r}
fit <- sem(model = multimodel_cfa, data = pisa, cluster = "CNT")
```


### Cargas estandarizadas 

```{r}
standardizedsolution(fit)
```

Se observa un panorama generalizado en las altas cargas factoriales en los indicadores. La gran mayoría ronda por el 0.8, mientras que solamente el indicador que trata sobre crear y mantener una página web tiene un loading > 0.7

### Correlación intraclase

```{r}
lavInspect(fit, "icc")
```

El ICC de todos los indicadores es bastante alto. El caso más llamativo es el de la variable relativa a buscar información en dispositivos digitales, donde el 58% de su varianza se debe a diferencias entre países (diferencias en cómo comprenden la escala?).