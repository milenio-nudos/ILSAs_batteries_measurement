level: 2
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
'
fit <- sem(model = multimodel_cfa, data = pisa, cluster = "CNT")
summary(fit)
standardizedsolution(fit)
lavInspect(fit, "icc")
# Chunk 1: libraries
#| label: libraries
#| echo: false
pacman::p_load(
dplyr, haven, sjlabelled,  psych,  purrr,  tidyr,  sjPlot,  ggplot2,
parameters,  table1,  car,  beeswarm,  lme4, scales, ggrepel, corrplot,
ggtext, patchwork, lavaan, semTools)
options(scipen = 999)
rm(list = ls())
# Chunk 2
#| include: false
library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)
table_format <- if(is_html_output()) {
"html"
} else if(is_latex_output()) {
"latex"
}
table_format2 <- if(is_html_output()) {
T
} else if(is_latex_output()) {
F
}
options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
# Chunk 3: data
#| label: data
#| echo: false
icils <- readRDS("../data/proc_data/icils23_proc.rds")
# Chunk 1: libraries
#| label: libraries
#| echo: false
pacman::p_load(
dplyr, haven, sjlabelled,  psych,  purrr,  tidyr,  sjPlot,  ggplot2,
parameters,  table1,  car,  beeswarm,  lme4, scales, ggrepel, corrplot,
ggtext, patchwork, lavaan, semTools)
options(scipen = 999)
rm(list = ls())
# Chunk 2
#| include: false
library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)
table_format <- if(is_html_output()) {
"html"
} else if(is_latex_output()) {
"latex"
}
table_format2 <- if(is_html_output()) {
T
} else if(is_latex_output()) {
F
}
options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
# Chunk 3: data
#| label: data
#| echo: false
icils <- readRDS("../data/proc_data/icils23_proc.rds")
#| label: data
#| echo: false
icils <- readRDS("../data/proc_data/icils23_proc.rds")
#| label: data
#| echo: false
icils <- readRDS("data/proc_data/icils23_proc.rds")
pisa <- readRDS("data/proc_data/pisa22_proc.rds")
# Chunk 1: libraries
#| label: libraries
#| echo: false
pacman::p_load(
dplyr, haven, sjlabelled,  psych,  purrr,  tidyr,  sjPlot,  ggplot2,
parameters,  table1,  car,  beeswarm,  lme4, scales, ggrepel, corrplot,
ggtext, patchwork, lavaan, semTools)
options(scipen = 999)
rm(list = ls())
# Chunk 2
#| include: false
library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)
table_format <- if(is_html_output()) {
"html"
} else if(is_latex_output()) {
"latex"
}
table_format2 <- if(is_html_output()) {
T
} else if(is_latex_output()) {
F
}
options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
# Chunk 3: data
#| label: data
#| echo: false
icils <- readRDS("data/proc_data/icils23_proc.rds")
pisa <- readRDS("data/proc_data/pisa22_proc.rds")
# Chunk 4: fig-descr-icils
#| label: fig-descr-icils
#| echo: true
#| fig-cap: Digital self-efficacy ICILS
#| fig-cap-location: bottom
a <- icils %>%
select(IS3G24A, IS3G24B, IS3G24C, IS3G24E, IS3G24F,
IS3G24G, IS3G24H, IS3G24I, IS3G24J, IS3G24M) %>%
sjPlot::plot_likert(geom.colors = "Reds",
title = c("General (n = 135.615)"),
sort.frq = "pos.desc",
geom.size = 0.8,
axis.labels = c("edit_photos", "edit_text", "search_info",
"change_settings", "create_pres", "upload_media", "insert_image", "install_app", "eval_info", "find_source"),
catcount = 4,
values  =  "sum.outside",
reverse.colors = F,
reverse.scale = T,
show.n = FALSE,
show.prc.sign = T
) +
ggplot2::theme(legend.position = "none")
b <- icils %>%
select(IS3G24D, IS3G24K, IS3G24L) %>%
sjPlot::plot_likert(geom.colors = "Reds",
title = c("Specialized"),
sort.frq = "pos.desc",
geom.size = 0.8,
axis.labels = c("build_page", "write_code", "devel_program"),
catcount = 4,
values  =  "sum.outside",
reverse.colors = F,
reverse.scale = T,
show.n = FALSE,
show.prc.sign = T
) +
ggplot2::theme(legend.position = "bottom")
liker_icils <- a/b
liker_icils
# Chunk 5: fig-corr-icils
#| label: fig-corr-icils
#| echo: true
#| fig-cap: ICILS correlations
#| fig-cap-location: bottom
M <- psych::polychoric(icils[c(3:15)])
P <- cor(icils[c(3:15)], method = "pearson")
diag(M$rho) <- NA
diag(P) <- NA
rownames(M$rho) <- c("edit_photos (A)",
"edit_text (B)",
"search_info (C)",
"build_page (D)",
"change_settings (E)",
"create_pres (F)",
"upload_media (G)",
"insert_image (H)",
"install_app (I)",
"eval_info (J)",
"write_code (K)",
"devel_program (L)",
"find_source (M)")
#set Column names of the matrix
colnames(M$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
"(H)","(I)", "(J)", "(K)", "(L)", "(M)")
rownames(P) <- c("edit_photos (A)",
"edit_text (B)",
"search_info (C)",
"build_page (D)",
"change_settings (E)",
"create_pres (F)",
"upload_media (G)",
"insert_image (H)",
"install_app (I)",
"eval_info (J)",
"write_code (K)",
"devel_program (L)",
"find_source (M)")
#set Column names of the matrix
colnames(P) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
"(H)","(I)", "(J)", "(K)", "(L)", "(M)")
testp <- cor.mtest(M$rho, conf.level = 0.95)
#Plot the matrix using corrplot
corrplot::corrplot(M$rho,
method = "color",
addCoef.col = "black",
type = "upper",
tl.col = "black",
col = colorRampPalette(c("#B42012", "white", "#E16462"))(12),
bg = "white",
na.label = "-")
# Chunk 6: select variables
#| label: select variables
#| include: false
pisa <- pisa %>%
select(search_info, asses_info, share_info, pair_collab, how_to_share,
edit_text, collect_data, create_pres, page_web, change_settings,
select_app, create_program, identify_error, logical_solution)
# Chunk 7: fig-descr-pisa
#| label: fig-descr-pisa
#| echo: true
#| fig-cap: Digital self-efficacy PISA
#| fig-cap-location: bottom
c <- pisa %>%
select(search_info, asses_info, share_info, pair_collab, how_to_share,
edit_text, collect_data, create_pres, page_web, change_settings,
select_app, create_program, identify_error, logical_solution) %>%
sjPlot::plot_likert(geom.colors = "Reds",
title = c("Digital self-efficacy (n = 393.607)"),
sort.frq = "pos.desc",
geom.size = 0.8,
axis.labels = c("search_info", "asses_info", "share_info",
"pair_collab", "how_to_share",                                                       "edit_text", "collect_data", "create_pres",
"page_web", "change_settings", "select_app",
"create_program", "identify_error",
"logical_solution"),
catcount = 4,
values  =  "sum.outside",
reverse.colors = F,
reverse.scale = T,
show.n = FALSE,
show.prc.sign = T
) +
ggplot2::theme(legend.position = "bottom")
c
# Chunk 8: fig-corr-pisa
#| label: fig-corr-pisa
#| echo: true
#| fig-cap: PISA correlations
#| fig-cap-location: bottom
Mp <- psych::polychoric(pisa[c(1:14)])
Pp <- cor(pisa[c(1:14)], method = "pearson")
diag(Mp$rho) <- NA
diag(Pp) <- NA
rownames(Mp$rho) <- c("search_info (A)",
"asses_info (B)",
"share_info (C)",
"pair_collab (D)",
"explain_howtoshare (E)",
"edit_text (F)",
"collect_data (G)",
"create_pres (H)",
"page_web (I)",
"change_settings (J)",
"select_app (K)",
"create_program (L)",
"identify_error (M)",
"logical_solution (N)")
#set Column names of the matrix
colnames(Mp$rho) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
"(H)","(I)", "(J)", "(K)", "(L)", "(M)", "(N)")
rownames(Pp) <- c("search_info (A)",
"asses_info (B)",
"share_info (C)",
"pair_collab (D)",
"explain_howtoshare (E)",
"edit_text (F)",
"collect_data (G)",
"create_pres (H)",
"page_web (I)",
"change_settings (J)",
"select_app (K)",
"create_program (L)",
"identify_error (M)",
"logical_solution (N)")
#set Column names of the matrix
colnames(Pp) <-c("(A)", "(B)","(C)","(D)","(E)","(F)","(G)",
"(H)","(I)", "(J)", "(K)", "(L)", "(M)", "(N)")
testpp <- cor.mtest(Mp$rho, conf.level = 0.95)
#Plot the matrix using corrplot
corrplot::corrplot(Mp$rho,
method = "color",
addCoef.col = "black",
type = "upper",
tl.col = "black",
col = colorRampPalette(c("#B42012", "white", "#E16462"))(12),
bg = "white",
number.digits = 2,
na.label = "-")
# Chunk 9
#| include: false
pisa_efa <- pisa %>%
select(search_info, asses_info, share_info, pair_collab, how_to_share,
edit_text, collect_data, create_pres, page_web, change_settings,
select_app, create_program, identify_error, logical_solution)
corMat <- round(cor(pisa_efa), 2)
KMO(corMat)
cortest.bartlett(corMat, n = 393607)
# Chunk 10
fac_pa <- fa(r = pisa_efa, nfactors = 3, fm= "pa")
fac_pa
# Chunk 11: Measurement model
#| label: Measurement model
model_cfa <- '
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
'
m_cfa <- cfa(model = model_cfa,
data = pisa,
estimator = "DWLS",
ordered = T,
std.lv = F)
# Chunk 12: tbl-factor-loadings
#| label: tbl-factor-loadings
#| tbl-cap: PISA Factor loadings
#| tbl-cap-location: bottom
#| echo: true
standardizedsolution(m_cfa) %>%
filter(op == "=~") %>%
select(Factor = lhs, Indicator = rhs, `Loading (DWLS)` = est.std) %>%
kable(format = "markdown", digits = 2)
# Chunk 13
summary(m_cfa)
# Chunk 14: tbl-fit-pisa
#| label: tbl-fit-pisa
#| tbl-cap: PISA Fit measures
#| tbl-cap-location: bottom
#| echo: true
fit_pisa <- fitMeasures(m_cfa,
c("chisq", "df", "pvalue", "cfi", "tli", "rmsea", "srmr"))
knitr::kable(fit_pisa, digits = 3)
# Chunk 15
multimodel_cfa <- '
level: 1
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
level: 2
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
'
# Chunk 16
fit <- sem(model = multimodel_cfa, data = pisa, cluster = "CNT")
#| label: data
#| echo: false
icils <- readRDS("~/GitHub/ILSAs_batteries_measurement/data/proc_data/icils23_proc.rds")
pisa <- readRDS("~/GitHub/ILSAs_batteries_measurement/data/proc_data/pisa22_proc.rds")
#| include: false
library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)
table_format <- if(is_html_output()) {
"html"
} else if(is_latex_output()) {
"latex"
}
table_format2 <- if(is_html_output()) {
T
} else if(is_latex_output()) {
F
}
options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
#| include: false
pisa_efa <- pisa %>%
select(search_info, asses_info, share_info, pair_collab, how_to_share,
edit_text, collect_data, create_pres, page_web, change_settings,
select_app, create_program, identify_error, logical_solution)
corMat <- round(cor(pisa_efa), 2)
KMO(corMat)
cortest.bartlett(corMat, n = 393607)
fac_pa <- fa(r = pisa_efa, nfactors = 3, fm= "pa")
fac_pa
#| label: Measurement model
model_cfa <- '
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
'
m_cfa <- cfa(model = model_cfa,
data = pisa,
estimator = "DWLS",
ordered = T,
std.lv = F)
#| label: tbl-factor-loadings
#| tbl-cap: PISA Factor loadings
#| tbl-cap-location: bottom
#| echo: true
standardizedsolution(m_cfa) %>%
filter(op == "=~") %>%
select(Factor = lhs, Indicator = rhs, `Loading (DWLS)` = est.std) %>%
kable(format = "markdown", digits = 2)
summary(m_cfa)
#| label: tbl-fit-pisa
#| tbl-cap: PISA Fit measures
#| tbl-cap-location: bottom
#| echo: true
fit_pisa <- fitMeasures(m_cfa,
c("chisq", "df", "pvalue", "cfi", "tli", "rmsea", "srmr"))
knitr::kable(fit_pisa, digits = 3)
multimodel_cfa <- '
level: 1
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
level: 2
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
'
fit <- sem(model = multimodel_cfa, data = pisa, cluster = "CNT")
summary(fit)
standardizedsolution(fit)
lavInspect(fit, "icc")
summary(fit, fitmeasures = TRUE, standardized = TRUE)
summary(fit, fit.measures = TRUE, standardized = TRUE)
modindices(fit)
modindices(fit) %>%
filter(mi > 3.84)
modindices(fit)
modindices(fit) %>%
filter(mi > 3.84)
modin <- modificationIndices(fit)
modin %>%
filter(mi > 3.84)
multimodel_cfa <- '
level: 1
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ create_program + identify_error + logical_solution
level: 2
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ create_program + identify_error + logical_solution
'
fit <- sem(model = multimodel_cfa, data = pisa, cluster = "CNT")
summary(fit, fit.measures = TRUE, standardized = TRUE)
modin <- modificationIndices(fit)
modin %>%
filter(mi > 3.84)
#| label: Multigroup
multigroup_cfa <- '
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
'
fit <- sem(model = multigroup_cfa, data = pisa, cluster = "CNT")
summary(fit, fit.measures = TRUE, standardized = TRUE)
fitgroup <- sem(model = multigroup_cfa, data = pisa, group = "CNT")
summary(fitgroup, fit.measures = TRUE, standardized = TRUE)
fitmeasures(multigroup_cfa)
fit.measures(multigroup_cfa)
fitMeasures(multigroup_cfa)
fitMeasures(multigroup_cfa, fit.measures = "all")
fitMeasures(multigroup_cfa, fit.measures = c("cfi", "tli", "rmsea"))
fitMeasures(fitgroup, fit.measures = c("cfi", "tli", "rmsea"))
unique(pisa$CNT)
summary(fitgroup, fit.measures = TRUE, standardized = TRUE)[30]
summary(fitgroup, fit.measures = TRUE, standardized = TRUE)$30
summary(fitgroup, fit.measures = TRUE, standardized = TRUE)[$30]
summary(fitgroup, fit.measures = TRUE, standardized = TRUE)$[30]
View(fitgroup)
summary(fitgroup, fit.measures = TRUE, standardized = TRUE)[[30]]
summary(fitgroup, fit.measures = TRUE, standardized = TRUE, [[30]])
summary(fitgroup, fit.measures = TRUE, standardized = TRUE)$[[30]]
fitMeasures(fitgroup)[[30]]
fitMeasures(fitgroup, group = "KOR")
fitMeasures(fitgroup, group = "CHL")
#| label: libraries
#| echo: false
pacman::p_load(
dplyr, haven, sjlabelled,  psych,  purrr,  tidyr,  sjPlot,  ggplot2,
parameters,  table1,  car,  beeswarm,  lme4, scales, ggrepel, corrplot,
ggtext, patchwork, lavaan, semTools)
options(scipen = 999)
rm(list = ls())
#| include: false
library(knitr)
knitr::opts_chunk$set(echo = TRUE, include = TRUE, warning = FALSE, message = FALSE)
table_format <- if(is_html_output()) {
"html"
} else if(is_latex_output()) {
"latex"
}
table_format2 <- if(is_html_output()) {
T
} else if(is_latex_output()) {
F
}
options(kableExtra.html.bsTable = T)
options(knitr.kable.NA = "")
#| label: data
#| echo: false
icils <- readRDS("~/GitHub/ILSAs_batteries_measurement/data/proc_data/icils23_proc.rds")
pisa <- readRDS("~/GitHub/ILSAs_batteries_measurement/data/proc_data/pisa22_proc.rds")
#| label: Measurement model
model_cfa <- '
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
'
m_cfa <- cfa(model = model_cfa,
data = pisa,
estimator = "DWLS",
ordered = T,
std.lv = F)
#| label: Multigroup
multigroup_cfa <- '
gen_dse = ~ search_info + asses_info + share_info + pair_collab + how_to_share +
edit_text + collect_data + create_pres + change_settings + select_app
spec_dse = ~ page_web + create_program + identify_error + logical_solution
'
fitgroup <- sem(model = multigroup_cfa, data = pisa, group = "CNT")
# El output arroja los modelos para todos los paises
summary(fitgroup, fit.measures = TRUE, standardized = TRUE)
View(fitgroup)
fitgroup@implied[["mean"]][[1]]
unique(pisa$CNT)
