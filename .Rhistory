geom_text_repel(data = labels_spec_dse,
aes(label = CNT),
size = 2.5,
color = "black",
box.padding = 0.4,
point.padding = 0.2,
min.segment.length = 0,
max.overlaps = Inf) +
scale_color_identity(name = "Factor",
guide = "legend",
labels = c("Especializada")) +
labs(title = "Cargas Factoriales: Autoeficacia Especializada",
x = "Carga Factorial Estandarizada",
y = "Ítem") +
theme_minimal(base_size = 10) +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5),
legend.position = "top")
print(plot_spec_dse)
lista_paises <- unique(unlist(pisa$CNT))
resultados_lista <- list()
summary_lista <- list()
for (pais_actual in lista_paises) {
# Imprimimos el progreso
# cat("Procesando:", pais_actual, "...\n")
datos_pais <- pisa %>%
filter(CNT == pais_actual)
fit_pais <- tryCatch({
sem(model = multigroup_cfa,
data = datos_pais)
}, error = function(e) {
cat("  -> ¡ERROR! No se pudo ajustar el modelo para", pais_actual, ". Razón:", conditionMessage(e), "\n")
return(NULL)
})
if (!is.null(fit_pais)) {
if (lavInspect(fit_pais, "converged")) {
medidas_ajuste <- fitMeasures(fit_pais)
resultados_lista[[pais_actual]] <- medidas_ajuste
cat("  -> Modelo ajustado y resultados guardados.\n")
} else {
cat("  -> ¡ADVERTENCIA! El modelo para", pais_actual, "no convergió. Se omitirán sus resultados.\n")
resultados_lista[[pais_actual]] <- rep(NA)
}
}
}
# cat("\n...Proceso de ajuste finalizado.\n")
lista_paises <- unique(unlist(pisa$CNT))
resultados_lista <- list()
summary_lista <- list()
for (pais_actual in lista_paises) {
# Imprimimos el progreso
# cat("Procesando:", pais_actual, "...\n")
datos_pais <- pisa %>%
filter(CNT == pais_actual)
fit_pais <- tryCatch({
sem(model = multigroup_cfa,
data = datos_pais)
}, error = function(e) {
cat("  -> ¡ERROR! No se pudo ajustar el modelo para", pais_actual, ". Razón:", conditionMessage(e), "\n")
return(NULL)
})
if (!is.null(fit_pais)) {
if (lavInspect(fit_pais, "converged")) {
medidas_ajuste <- fitMeasures(fit_pais)
resultados_lista[[pais_actual]] <- medidas_ajuste
# cat("  -> Modelo ajustado y resultados guardados.\n")
} else {
cat("  -> ¡ADVERTENCIA! El modelo para", pais_actual, "no convergió. Se omitirán sus resultados.\n")
resultados_lista[[pais_actual]] <- rep(NA)
}
}
}
# cat("\n...Proceso de ajuste finalizado.\n")
fit_indices_por_pais <- do.call(rbind, resultados_lista)
fit_indices_por_pais <- as.data.frame(fit_indices_por_pais)
fit_indices_por_pais <- fit_indices_por_pais %>%
tibble::rownames_to_column(var = "CNT")
indices_ajuste <- fit_indices_por_pais %>%
select(CNT, chisq, df, rmsea, rmsea.ci.lower,  rmsea.ci.upper, srmr, cfi, tli)
#| label: tabla-interactiva
#| echo: false
datatable(
indices_ajuste,
options = list(
pageLength = 10,
autoWidth = TRUE,
searchHighlight = TRUE
),
filter = 'top',
rownames = FALSE,
caption = "Índices de Ajuste del Modelo (Interactiva)"
)
table1::table1(~ .,data=indices_ajuste)
table1::table1(~ -CNT + .,data=indices_ajuste)
table1::table1(~ -CNT + .,data=indices_ajuste)
table1::table1(~ . + -CNT,data=indices_ajuste)
#| label: tabla-interactiva
#| echo: false
datatable(
indices_ajuste,
options = list(
pageLength = 10,
autoWidth = TRUE,
searchHighlight = TRUE
),
filter = 'top',
rownames = FALSE,
caption = "Índices de Ajuste del Modelo (Interactiva)"
)
table1::table1(~ . + -CNT,data=indices_ajuste)
pisa22ict <- readRDS("~/GitHub/milenio_nudos/ILSAs_batteries_measurement/data/proc_data/pisa22ict.rds")
pisa22ict <- readRDS("~/GitHub/milenio_nudos/ILSAs_batteries_measurement/data/proc_data/pisa22ict.rds")
View(pisa22ict)
pisa22ict <- readRDS(here::here("data/proc_data/pisa22ict.rds"))
pisa22ict <- readRDS(here::here("data/proc_data/pisa22ict.rds"))
pacman::p_load(dplyr, haven, psych, purrr, tidyr, tidytext, sjPlot, ggplot2,
parameters, table1, beeswarm, lme4, rio, skimr, effects,
labelled, knitr, kableExtra, stringr, sjmisc, purr, ggbeeswarm,
sjlabelled, ggrepel,forcats,ggpubr,upstartr)
options(scipen = 999)
options(digits = 2)
rm(list = ls())
variables_labels <- c(
"buscar_info",
"evaluar_info",
"compartir_info",
"colaboracion_pares",
"explicar_info_pares",
"editar_texto",
"manejar_datos",
"crear_presentacion",
"manejar_pag_web",
"configuracion_privacidad",
"selecc_mejor_app",
"crear_programa",
"hallar_error_programa",
"representar_solucion_logica")
pisa22ict <- readRDS(here::here("data/proc_data/pisa22ict.rds"))
# "No sé" como NA
pisa22ict <- pisa22ict|>
mutate(across(starts_with("IC183Q0"),~ ifelse(. == 5, NA, .)))
# Recodificación de variables
var_label(pisa22ict) <- list(
IC183Q02JA = "evaluar_info",
IC183Q03JA = "compartir_info",
IC183Q04JA = "colaboracion_pares",
IC183Q05JA = "explicar_info_pares",
IC183Q07JA = "editar_texto",
IC183Q14JA = "crear_programa",
IC183Q15JA = "hallar_error_programa",
IC183Q16JA = "representar_solucion_logica"
)
pisa22ict <- pisa22ict %>%
mutate(OCDE = if_else(CNT %in% c("AUS", "AUT", "BEL", "CHL", "CRI",
"CZE", "DNK", "EST", "FIN", "DEU", "GRC", "HUN", "ISL", "IRL", "ISR", "ITA", "JPN", "KOR", "LTU", "LVA", "POL", "SVK", "SVN", "ESP", "SWE", "CHE", "TUR", "GBR", "USA"), 1, 0))
efficacy_variables <- pisa22ict |>
select(CNT, #Country
IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA,
IC183Q14JA, IC183Q15JA, IC183Q16JA)
latam_cleaveland <- pisa22ict %>%
filter(CNT %in% c("BRA", "ARG", "CRI", "CHL", "DOM", "PAN", "URY"))
pisa22ict <- pisa22ict %>%
mutate(latam = ifelse(CNT %in% c("BRA", "ARG", "CRI", "CHL", "DOM", "PAN", "URY"),1,0))
pacman::p_load(dplyr, haven, psych, purrr, tidyr, tidytext, sjPlot, ggplot2,
parameters, table1, beeswarm, lme4, rio, skimr, effects,
labelled, knitr, kableExtra, stringr, sjmisc, purr, ggbeeswarm,
sjlabelled, ggrepel,forcats,ggpubr,upstartr)
options(scipen = 999)
options(digits = 2)
rm(list = ls())
variables_labels <- c(
"evaluar_info",
"compartir_info",
"colaboracion_pares",
"explicar_info_pares",
"editar_texto",
"crear_programa",
"hallar_error_programa",
"representar_solucion_logica")
pisa22ict <- readRDS(here::here("data/proc_data/pisa22ict.rds"))
# "No sé" como NA
pisa22ict <- pisa22ict|>
mutate(across(starts_with("IC183Q0"),~ ifelse(. == 5, NA, .)))
# Recodificación de variables
var_label(pisa22ict) <- list(
IC183Q02JA = "evaluar_info",
IC183Q03JA = "compartir_info",
IC183Q04JA = "colaboracion_pares",
IC183Q05JA = "explicar_info_pares",
IC183Q07JA = "editar_texto",
IC183Q14JA = "crear_programa",
IC183Q15JA = "hallar_error_programa",
IC183Q16JA = "representar_solucion_logica"
)
pisa22ict <- pisa22ict %>%
mutate(OCDE = if_else(CNT %in% c("AUS", "AUT", "BEL", "CHL", "CRI",
"CZE", "DNK", "EST", "FIN", "DEU", "GRC", "HUN", "ISL", "IRL", "ISR", "ITA", "JPN", "KOR", "LTU", "LVA", "POL", "SVK", "SVN", "ESP", "SWE", "CHE", "TUR", "GBR", "USA"), 1, 0))
efficacy_variables <- pisa22ict |>
select(CNT, #Country
IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA,
IC183Q14JA, IC183Q15JA, IC183Q16JA)|>
mutate(
effgen = rowMeans(select(., IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA), na.rm = TRUE),
effspec = rowMeans(select(., IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm = TRUE)
)
pacman::p_load(dplyr, haven, psych, purrr, tidyr, tidytext, sjPlot, ggplot2,
parameters, table1, beeswarm, lme4, rio, skimr, effects,
labelled, knitr, kableExtra, stringr, sjmisc, purr, ggbeeswarm,
sjlabelled, ggrepel,forcats,ggpubr,upstartr)
options(scipen = 999)
options(digits = 2)
rm(list = ls())
variables_labels <- c(
"evaluar_info",
"compartir_info",
"colaboracion_pares",
"explicar_info_pares",
"editar_texto",
"crear_programa",
"hallar_error_programa",
"representar_solucion_logica")
pisa22ict <- readRDS(here::here("data/proc_data/pisa22ict.rds"))
# "No sé" como NA
pisa22ict <- pisa22ict|>
mutate(across(starts_with("IC183Q0"),~ ifelse(. == 5, NA, .)))
# Recodificación de variables
var_label(pisa22ict) <- list(
IC183Q02JA = "evaluar_info",
IC183Q03JA = "compartir_info",
IC183Q04JA = "colaboracion_pares",
IC183Q05JA = "explicar_info_pares",
IC183Q07JA = "editar_texto",
IC183Q14JA = "crear_programa",
IC183Q15JA = "hallar_error_programa",
IC183Q16JA = "representar_solucion_logica"
)
pisa22ict <- pisa22ict %>%
mutate(OCDE = if_else(CNT %in% c("AUS", "AUT", "BEL", "CHL", "CRI",
"CZE", "DNK", "EST", "FIN", "DEU", "GRC", "HUN", "ISL", "IRL", "ISR", "ITA", "JPN", "KOR", "LTU", "LVA", "POL", "SVK", "SVN", "ESP", "SWE", "CHE", "TUR", "GBR", "USA"), 1, 0))
efficacy_variables <- pisa22ict |>
select(CNT, #Country
IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA,
IC183Q14JA, IC183Q15JA, IC183Q16JA)
latam_cleaveland <- pisa22ict %>%
filter(CNT %in% c("BRA", "ARG", "CRI", "CHL", "DOM", "PAN", "URY"))
pisa22ict <- pisa22ict %>%
mutate(latam = ifelse(CNT %in% c("BRA", "ARG", "CRI", "CHL", "DOM", "PAN", "URY"),1,0))
pisa22ict <- pisa22ict|>
mutate(
effgen = rowMeans(select(., IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA), na.rm = TRUE),
effspec = rowMeans(select(., IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm = TRUE)
)
pisa22ict <- pisa22ict|>
mutate(
effgen = rowMeans(select(., IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA), na.rm = TRUE),
effspec = rowMeans(select(., IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm = TRUE)
)
pisa22ict <- pisa22ict|>
mutate(
effgen = rowMeans(select(., IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA), na.rm = TRUE),
effspec = rowMeans(select(., IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm = TRUE)
)
pacman::p_load(dplyr, haven, psych, purrr, tidyr, tidytext, sjPlot, ggplot2,
parameters, table1, beeswarm, lme4, rio, skimr, effects,
labelled, knitr, kableExtra, stringr, sjmisc, purr, ggbeeswarm,
sjlabelled, ggrepel,forcats,ggpubr,upstartr)
options(scipen = 999)
options(digits = 2)
rm(list = ls())
variables_labels <- c(
"evaluar_info",
"compartir_info",
"colaboracion_pares",
"explicar_info_pares",
"editar_texto",
"crear_programa",
"hallar_error_programa",
"representar_solucion_logica")
pisa22ict <- readRDS(here::here("data/proc_data/pisa22ict.rds"))
# "No sé" como NA
pisa22ict <- pisa22ict|>
mutate(across(starts_with("IC183Q0"),~ ifelse(. == 5, NA, .)))
# Recodificación de variables
var_label(pisa22ict) <- list(
IC183Q02JA = "evaluar_info",
IC183Q03JA = "compartir_info",
IC183Q04JA = "colaboracion_pares",
IC183Q05JA = "explicar_info_pares",
IC183Q07JA = "editar_texto",
IC183Q14JA = "crear_programa",
IC183Q15JA = "hallar_error_programa",
IC183Q16JA = "representar_solucion_logica"
)
pisa22ict <- pisa22ict %>%
mutate(OCDE = if_else(CNT %in% c("AUS", "AUT", "BEL", "CHL", "CRI",
"CZE", "DNK", "EST", "FIN", "DEU", "GRC", "HUN", "ISL", "IRL", "ISR", "ITA", "JPN", "KOR", "LTU", "LVA", "POL", "SVK", "SVN", "ESP", "SWE", "CHE", "TUR", "GBR", "USA"), 1, 0))
efficacy_variables <- pisa22ict |>
select(CNT, #Country
IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA,
IC183Q14JA, IC183Q15JA, IC183Q16JA)
pisa22ict <- pisa22ict %>%
mutate(latam = ifelse(CNT %in% c("BRA", "ARG", "CRI", "CHL", "DOM", "PAN", "URY"),1,0))
pisa22ict <- pisa22ict|>
mutate(
effgen = rowMeans(select(., IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA), na.rm = TRUE),
effspec = rowMeans(select(., IC183Q14JA, IC183Q15JA, IC183Q16JA), na.rm = TRUE)
)
pisa22ict <- pisa22ict |>
mutate(
effgen = rowMeans(across(c(IC183Q02JA, IC183Q03JA, IC183Q04JA, IC183Q05JA, IC183Q07JA)), na.rm = TRUE),
effspec = rowMeans(across(c(IC183Q14JA, IC183Q15JA, IC183Q16JA)), na.rm = TRUE)
)
beeswarm_plot <- pisa22ict|>
group_by(CNT)|>
summarise(mean_geneff = mean(effgen, na.rm = T),
mean_speceff = mean(effspec, na.rm = T))|>
ungroup()|>
pivot_longer(cols = 2:3,
names_to = "type",
values_to = "score")
beeswarm_labels <-
rbind(
beeswarm_plot%>%
group_by(type) %>%
arrange(score) %>%
slice(c(1:3, (n() - 2):n())) %>% # First five and last five countries
ungroup() %>%
mutate(CNT = to_label(CNT)),
beeswarm_plot%>%
filter(CNT %in% c("CHL","BRA","ARG","MEX"))%>%
mutate(CNT = to_label(CNT))
)
ggplot(beeswarm_plot, aes(y = score, x = type, color = type)) +
geom_beeswarm(size = 2) +
geom_text_repel(
data = beeswarm_labels, # Use only the filtered data for labels
aes(label = CNT), # Add country labels
hjust = -0.2, vjust = 0.5, size = 5, color = "black"
) +
scale_color_manual(values = c("#5f5758","#fe3057")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.position = "none",
plot.caption = element_text(size = 15)
) +
scale_x_discrete(labels = c("1. Autoeficacia General", "2. Autoeficacia Especializada")) +
labs(caption = "r = 0.21")
beeswarm_plot <- pisa22ict|>
group_by(CNT)|>
summarise(mean_geneff = mean(effgen, na.rm = T),
mean_speceff = mean(effspec, na.rm = T))|>
ungroup()|>
pivot_longer(cols = 2:3,
names_to = "type",
values_to = "score")
beeswarm_labels <-
rbind(
beeswarm_plot%>%
group_by(type) %>%
arrange(score) %>%
slice(c(1:3, (n() - 2):n())) %>% # First five and last five countries
ungroup() %>%
mutate(CNT = to_label(CNT)),
beeswarm_plot%>%
filter(CNT %in% c("CHL","MA"))%>%
mutate(CNT = to_label(CNT))
)
ggplot(beeswarm_plot, aes(y = score, x = type, color = type)) +
geom_beeswarm(size = 2) +
geom_text_repel(
data = beeswarm_labels, # Use only the filtered data for labels
aes(label = CNT), # Add country labels
hjust = -0.2, vjust = 0.5, size = 5, color = "black"
) +
scale_color_manual(values = c("#5f5758","#fe3057")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.position = "none",
plot.caption = element_text(size = 15)
) +
scale_x_discrete(labels = c("1. Autoeficacia General", "2. Autoeficacia Especializada")) +
labs(caption = "r = 0.21")
beeswarm_labels
beeswarm_plot%>%
filter(CNT %in% c("CHL","MA"))%>%
mutate(CNT = to_label(CNT))
beeswarm_plot%>%
group_by(type) %>%
arrange(score) %>%
slice(c(1:3, (n() - 2):n())) %>% # First five and last five countries
ungroup() %>%
mutate(CNT = to_label(CNT))
beeswarm_plot
beeswarm_plot <- pisa22ict|>
group_by(CNT)|>
summarise(mean_geneff = mean(effgen, na.rm = T),
mean_speceff = mean(effspec, na.rm = T))|>
ungroup()|>
pivot_longer(cols = 2:3,
names_to = "type",
values_to = "score")
beeswarm_labels <-
rbind(
beeswarm_plot%>%
group_by(type) %>%
arrange(score) %>%
slice(c(1:3, (n() - 2):n())) %>% # First five and last five countries
ungroup() %>%
mutate(CNT = to_label(CNT)),
beeswarm_plot%>%
filter(CNT %in% c("CHL","MA"))%>%
mutate(CNT = to_label(CNT))
)
ggplot(beeswarm_plot, aes(y = score, x = type, color = type)) +
geom_beeswarm(size = 2) +
geom_text_repel(
data = beeswarm_labels, # Use only the filtered data for labels
aes(label = CNT), # Add country labels
hjust = -0.2, vjust = 0.5, size = 5, color = "black"
) +
scale_color_manual(values = c("#5f5758","#fe3057")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.position = "none",
plot.caption = element_text(size = 15)
) +
scale_x_discrete(labels = c("1. Autoeficacia General", "2. Autoeficacia Especializada")) +
labs(caption = "r = 0.21")
beeswarm_plot
beeswarm_labels <-
rbind(
beeswarm_plot%>%
group_by(type) %>%
arrange(score) %>%
slice(c(1:3, (n() - 2):n())) %>% # First five and last five countries
ungroup() %>%
mutate(CNT = to_label(CNT)),
beeswarm_plot%>%
filter(CNT %in% c("CHL","MAR"))%>%
mutate(CNT = to_label(CNT))
)
ggplot(beeswarm_plot, aes(y = score, x = type, color = type)) +
geom_beeswarm(size = 2) +
geom_text_repel(
data = beeswarm_labels, # Use only the filtered data for labels
aes(label = CNT), # Add country labels
hjust = -0.2, vjust = 0.5, size = 5, color = "black"
) +
scale_color_manual(values = c("#5f5758","#fe3057")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.position = "none",
plot.caption = element_text(size = 15)
) +
scale_x_discrete(labels = c("1. Autoeficacia General", "2. Autoeficacia Especializada")) +
labs(caption = "r = 0.21")
beeswarm_plot%>%
filter(CNT %in% c("CHL","MAR"))%>%
mutate(CNT = to_label(CNT))
beeswarm_labels <-
rbind(
beeswarm_plot%>%
group_by(type) %>%
arrange(score) %>%
slice(c(1:3, (n() - 2):n())) %>% # First five and last five countries
ungroup() %>%
mutate(CNT = to_label(CNT)),
beeswarm_plot%>%
filter(CNT %in% c("CHL","MAR"))%>%
mutate(CNT = to_label(CNT))%>%
slice(-3)
)
ggplot(beeswarm_plot, aes(y = score, x = type, color = type)) +
geom_beeswarm(size = 2) +
geom_text_repel(
data = beeswarm_labels, # Use only the filtered data for labels
aes(label = CNT), # Add country labels
hjust = -0.2, vjust = 0.5, size = 5, color = "black"
) +
scale_color_manual(values = c("#5f5758","#fe3057")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 10),
legend.position = "none",
plot.caption = element_text(size = 15)
) +
scale_x_discrete(labels = c("1. Autoeficacia General", "2. Autoeficacia Especializada")) +
labs(caption = "r = 0.21")
